---
import type { GetStaticPaths } from 'astro'
import { getCollection } from 'astro:content'
import { Image } from 'astro:assets'
import '@src/styles/md.scss'
import Layout from '@lib/layouts/base.astro'
import { components } from '@components/md'
import ChapterNav from '@components/chapter-nav.svelte'

export const getStaticPaths = (async () => {
    const posts = await getCollection('posts')
    return posts.map((post) => ({
        params: { slug: post.slug },
        props: { post },
    }))
}) satisfies GetStaticPaths

const { post } = Astro.props
const { Content, headings, remarkPluginFrontmatter: remark } = await post.render()
const images = import.meta.glob<{ default: ImageMetadata }>('/src/content/posts/**/_cover*.*')
const cover = post.data.link.replace('.', '/src/content') + '/' + post.data.cover
---

<Layout title={'$ - ' + post.data.title}>
    <div class="container lg:max-w-6xl mx-auto">
        <h1 class="font-bold text-3xl mt-2 my-4 tracking-tight">{post.data.title}</h1>
        <div class="flex flex-wrap text-sm text-gray-400 gap-x-6 gap-y-2 mb-10">
            <span>{post.data.author}</span>
            <span>
                发布于: {
                    post.data.pubDate.toLocaleString(undefined, {
                        year: 'numeric',
                        month: '2-digit',
                        day: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit',
                    })
                }
            </span>
            {
                post.data.tag && (
                    <span>
                        <span>Tags:</span>
                        <span class="space-x-2">
                            {post.data.tag.map((t) => (
                                <a class="text-black" href={`/myblog/tags/${t}`}>
                                    {t}
                                </a>
                            ))}
                        </span>
                    </span>
                )
            }
            <span>字数: {remark.readingTime.words.toLocaleString()}</span>
            <span>阅读时间: {Math.ceil(remark.readingTime.minutes)} 分钟</span>
        </div>
        {
            post.data.cover && (
                <div class="my-6 flex justify-center">
                    <Image src={images[cover]()} alt="" />
                </div>
            )
        }
        { headings.length && <ChapterNav client:load {headings} /> }
        <article class="mt-8 content" id="__page-article">
            <Content {components} />
        </article>
    </div>
</Layout>
