---
import type { GetStaticPaths } from 'astro'
import { getCollection } from 'astro:content'
import { Image } from 'astro:assets'
import '@src/styles/md.scss'
import Layout from '@lib/layouts/base.astro'
import { components } from '@components/md'

export const getStaticPaths = (async () => {
    const posts = await getCollection('posts')
    return posts.map((post) => ({
        params: { slug: post.slug },
        props: { post },
    }))
}) satisfies GetStaticPaths

const { post } = Astro.props
const { Content, headings, remarkPluginFrontmatter: remark } = await post.render()
const images = import.meta.glob<{ default: ImageMetadata }>('/src/content/posts/**/_cover*.*')
const cover = post.data.link.replace('.', '/src/content') + '/' + post.data.cover
---

<Layout title={'$ - ' + post.data.title}>
    <div class="container lg:max-w-6xl mx-auto">
        <h1 class="font-bold text-3xl mt-2 my-4 tracking-tight">{post.data.title}</h1>
        <div class="flex flex-wrap text-sm text-gray-400 gap-x-6 gap-y-2 mb-10">
            <span>{post.data.author}</span>
            <span
                >发布于: {
                    post.data.pubDate.toLocaleString(undefined, {
                        year: 'numeric',
                        month: '2-digit',
                        day: '2-digit',
                        hour: '2-digit',
                        minute: '2-digit',
                    })
                }</span
            >
            {
                post.data.tag && (
                    <span>
                        <span>Tags:</span>
                        <span class="space-x-2">
                            {post.data.tag.map((t) => (
                                <a class="text-black" href={`/myblog/tags/${t}`}>
                                    {t}
                                </a>
                            ))}
                        </span>
                    </span>
                )
            }
            <span>字数: {remark.readingTime.words.toLocaleString()}</span>
            <span>阅读时间: {Math.ceil(remark.readingTime.minutes)} 分钟</span>
        </div>
        {
            post.data.cover && (
                <div class="my-6 flex justify-center">
                    <Image src={images[cover]()} alt="" />
                </div>
            )
        }
        {
            headings.length && (
                <button class="border sticky w-full top-0 z-50 box-border text-sm bg-gray-50 rounded-md shadow-md focus-within:rounded-b-none px-3 py-1 cursor-pointer flex items-center justify-between group">
                    <div class="text-gray-600 group-hover:text-black">本文章节</div>
                    <svg viewBox="0 0 1024 1024" class="h-8 w-8 text-gray-500 transition-all group-hover:text-black group-focus:rotate-180">
                        <path fill="currentColor" d="M512 608c-6.4 0-19.2 0-25.6-6.4l-128-128c-12.8-12.8-12.8-32 0-44.8s32-12.8 44.8 0L512 531.2l102.4-102.4c12.8-12.8 32-12.8 44.8 0s12.8 32 0 44.8l-128 128C531.2 608 518.4 608 512 608z"></path>
                    </svg>
                    <ul class="absolute hidden text-left group-focus-within:block bg-white max-h-[50vh] overflow-y-auto box-border shadow-md rounded-b-md -left-px -right-px top-10 py-2 border">
                        <li>
                            <a class="block hover:bg-gray-100 !no-underline px-3 py-2" href="#__page-top">&UpArrow; 回到顶部</a>
                        </li>
                        { headings.map(h => (
                            <li><a class={`block hover:bg-gray-100 !no-underline px-${h.depth * 3} py-2`} href={`#${h.slug}`}>{h.text}</a></li>
                        ))}
                    </ul>
                </button>
            )
        }
        <article class="mt-8 content">
            <Content {components} />
        </article>
    </div>
</Layout>
